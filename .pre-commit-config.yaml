repos:
  # Ruff for linting and formatting (Context7 enhanced)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.6.0  # Updated to latest stable
    hooks:
      - id: ruff
        name: ruff check
        args: [--fix, --exit-non-zero-on-fix]
        types_or: [python, pyi]
      - id: ruff-format
        name: ruff format
        types_or: [python, pyi]
      # Context7 Security Focus: Separate security check
      - id: ruff
        name: security check (BLE001 focus)
        args: [--select=BLE001,S, --no-fix]
        types_or: [python, pyi]
        pass_filenames: true

  # Basic pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-toml
      - id: check-json
      - id: check-merge-conflict
      - id: check-added-large-files
        args: [--maxkb=500]
      - id: check-docstring-first
      - id: debug-statements
      - id: name-tests-test
        args: [--pytest-test-first]

  # Pyright type checking
  - repo: local
    hooks:
      - id: pyright
        name: pyright type checking
        entry: pyright
        language: node
        additional_dependencies: [pyright@latest]
        args: [--outputjson]
        files: ^src/.*\.py$
        pass_filenames: false

  # Security scanning with Bandit
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-c, pyproject.toml]
        additional_dependencies: ["bandit[toml]"]

  # Dockerfile linting removed - native deployment only

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types_or: [yaml, markdown, json]
        args: [--tab-width=2]

  # Git commit message validation
  - repo: https://github.com/commitizen-tools/commitizen
    rev: 3.13.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # Custom MCP protocol validation hook
  - repo: local
    hooks:
      - id: mcp-protocol-validation
        name: MCP Protocol Validation
        entry: python scripts/validate_mcp_protocol.py
        language: system
        files: ^src/.*mcp.*\.py$
        pass_filenames: true

  # Custom ML contract validation
  - repo: local
    hooks:
      - id: ml-contract-validation
        name: ML Contract Validation
        entry: python scripts/validate_ml_contracts.py
        language: system
        files: ^src/.*(ml|prompt|evaluation).*\.py$
        pass_filenames: true

  # Performance regression detection
  - repo: local
    hooks:
      - id: performance-regression-check
        name: Performance Regression Check
        entry: python scripts/check_performance_regression.py
        language: system
        files: ^src/.*\.py$
        pass_filenames: false
        stages: [pre-push]

# Global configuration
default_language_version:
  python: python3.11

# Skip hooks for specific scenarios
ci:
  skip: [performance-regression-check]  # Skip in CI to avoid duplicate runs
  # Note: Security checks (BLE001) run in both pre-commit and CI (Context7 defense-in-depth)

# Hook execution order
stages:
  - commit
  - manual
  - pre-push
