# ============================================================================
# Configuration Template for Prompt Improver
# ============================================================================
# SECURITY WARNING: Never commit actual passwords or secrets to version control
# Generate secure passwords using: openssl rand -base64 32
#
# Copy this file to .env and customize values for your environment.

# ============================================================================
# Core Environment Settings
# ============================================================================
ENVIRONMENT=development  # Options: development, staging, production, test
DEBUG=true
LOG_LEVEL=INFO  # Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
APP_NAME=prompt-improver
APP_VERSION=1.0.0
SECRET_KEY=your-super-secret-key-change-this-in-production-must-be-32-chars-min

# ============================================================================
# Database Configuration (PostgreSQL)
# ============================================================================
# Primary database connection
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DATABASE=apes_production
POSTGRES_USERNAME=apes_user
POSTGRES_PASSWORD=your_secure_database_password_here

# Connection pool settings (2025 best practices)
# Production: min=8, max=32, timeout=5
# Development: min=4, max=16, timeout=10  
# Test: min=2, max=8, timeout=5
DB_POOL_MIN_SIZE=4          # Minimum connections to keep warm
DB_POOL_MAX_SIZE=16         # Maximum connections for traffic spikes
DB_POOL_TIMEOUT=10          # Connection timeout in seconds
DB_POOL_MAX_LIFETIME=1800   # Max connection age (30 minutes)
DB_POOL_MAX_IDLE=300        # Max idle time (5 minutes)

# Performance settings
DB_STATEMENT_TIMEOUT=30     # SQL statement timeout in seconds
DB_ECHO_SQL=false          # Log SQL statements (enable for debugging)
DB_TARGET_QUERY_TIME_MS=50 # Target query response time
DB_TARGET_CACHE_HIT_RATIO=0.90 # Target cache hit ratio

# Test database settings (used during testing)
TEST_DATABASE_NAME=apes_test
TEST_DATABASE_URL=postgresql://apes_user:apes_secure_password_2024@localhost:5432/apes_test

# Test-specific alternative names
TEST_DB_NAME=apes_test
TEST_DB_HOST=localhost

# ============================================================================
# Redis Configuration
# ============================================================================
# Primary connection settings
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=                    # Optional password
REDIS_USERNAME=                    # Optional username (Redis 6.0+)

# Connection pool settings
REDIS_MAX_CONNECTIONS=20
REDIS_CONNECT_TIMEOUT=5           # Connection timeout in seconds
REDIS_SOCKET_TIMEOUT=5            # Socket timeout in seconds
REDIS_DEFAULT_TTL=3600            # Default TTL in seconds (1 hour)

# Memory and performance settings
REDIS_MAX_MEMORY=256mb
REDIS_MAX_MEMORY_POLICY=allkeys-lru

# High availability settings (for production)
REDIS_SENTINEL_ENABLED=false
REDIS_SENTINEL_HOSTS=             # Comma-separated list: host1:26379,host2:26379
REDIS_SENTINEL_SERVICE_NAME=mymaster

# Redis Security Settings - CRITICAL SECURITY UPDATES
REDIS_REQUIRE_AUTH=true              # Enforce authentication (SECURITY FIX)
REDIS_USE_SSL=false                  # Enable SSL/TLS for production
REDIS_SSL_CERT_PATH=                 # Path to SSL certificate
REDIS_SSL_KEY_PATH=                  # Path to SSL private key  
REDIS_SSL_CA_PATH=                   # Path to SSL CA certificate
REDIS_SSL_VERIFY_MODE=required       # SSL verification: none, optional, required

# Test-specific Redis settings - SECURITY ENHANCED
TEST_REDIS_HOST=localhost
TEST_REDIS_PORT=6379
TEST_REDIS_DB=15

# ============================================================================
# MCP Server Configuration (Updated for External Access)
# ============================================================================
# MCP Server Host/Port - Updated for production deployment
MCP_SERVER_HOST=0.0.0.0        # Allow external access (was 127.0.0.1)
MCP_SERVER_PORT=8080            # Default HTTP port
MCP_TIMEOUT=30                  # Request timeout in seconds
MCP_BATCH_SIZE=100              # Batch processing size

# External Service URLs (Updated Defaults)
MLFLOW_TRACKING_URI=http://mlflow.external.service:5000
REDIS_HOST=redis.external.service
REDIS_URL=redis://redis.external.service:6379/0
TEST_REDIS_PASSWORD=                 # Generate with: openssl rand -base64 32

# ============================================================================
# API Server Configuration
# ============================================================================
# Server settings
API_HOST=0.0.0.0
API_PORT=8000
API_WORKERS=1                     # Number of worker processes

# Request/Response limits
API_MAX_REQUEST_SIZE=10485760     # 10MB in bytes
API_REQUEST_TIMEOUT=30            # Request timeout in seconds

# Rate limiting
API_RATE_LIMIT_ENABLED=true
API_RATE_LIMIT_RPM=60            # Requests per minute per client
API_RATE_LIMIT_BURST=10          # Rate limit burst capacity

# CORS settings
API_CORS_ENABLED=true
API_CORS_ORIGINS=http://localhost:8080
API_CORS_METHODS=GET,POST,PUT,DELETE,OPTIONS

# Security settings
API_ENABLE_HTTPS=false            # Enable HTTPS (requires SSL certificates)
API_SSL_CERT_PATH=                # Path to SSL certificate file
API_SSL_KEY_PATH=                 # Path to SSL private key file

# Note: JWT authentication has been removed from the system
# The system now uses simplified input validation instead

# ============================================================================
# Machine Learning Configuration
# ============================================================================
# Model storage and caching
ML_MODEL_STORAGE_PATH=./models
ML_MODEL_CACHE_SIZE=5             # Number of models to cache in memory
ML_MODEL_WARMUP_ENABLED=true      # Warm up models on startup

# Inference settings
ML_INFERENCE_TIMEOUT=30           # Model inference timeout in seconds
ML_BATCH_SIZE=32                  # Default batch size for inference
ML_MAX_SEQUENCE_LENGTH=2048       # Maximum input sequence length

# Resource limits
ML_GPU_MEMORY_FRACTION=0.8        # Fraction of GPU memory to use
ML_CPU_THREADS=4                  # Number of CPU threads for inference

# MLflow experiment tracking
MLFLOW_TRACKING_URI=              # Optional: MLflow tracking server URI
MLFLOW_EXPERIMENT_NAME=prompt-improvement

# Model serving
ML_MODEL_SERVING_ENABLED=true     # Enable model serving endpoints
ML_MODEL_HOST=0.0.0.0             # Host for ML model deployment (0.0.0.0 for external access)

# AutoML Configuration
AUTOML_DATABASE_URL=              # Optional: Custom AutoML database URL (uses main DB if not set)

# Note: Voyage AI configuration is managed separately in voyage-search/.env
# This maintains proper separation between core application and external tools

# ============================================================================
# MCP Server Configuration
# ============================================================================
# MCP Server uses unified database pool settings (DB_POOL_*) for connections
MCP_POSTGRES_ENABLED=true
MCP_POSTGRES_PASSWORD=secure_mcp_user_password

# MCP Redis settings (separate databases for isolation)
MCP_RATE_LIMIT_REDIS_URL=redis://localhost:6379/2
MCP_CACHE_REDIS_URL=redis://localhost:6379/3

# MCP Performance settings
MCP_LOG_LEVEL=INFO
MCP_PERFORMANCE_MONITORING_ENABLED=true
MCP_FEEDBACK_ENABLED=true
MCP_MAX_PROMPT_LENGTH=10240
MCP_REQUEST_TIMEOUT_MS=200
MCP_CACHE_TTL_SECONDS=7200

# ============================================================================
# Health Check and Monitoring Configuration
# ============================================================================
# Health check intervals
HEALTH_CHECK_INTERVAL=30          # Health check interval in seconds
STARTUP_TIMEOUT=60               # Startup timeout in seconds
SHUTDOWN_TIMEOUT=30              # Graceful shutdown timeout in seconds

# Component health timeouts
DB_HEALTH_TIMEOUT=5              # Database health check timeout
REDIS_HEALTH_TIMEOUT=3           # Redis health check timeout
ML_HEALTH_TIMEOUT=10             # ML model health check timeout

# Performance thresholds
RESPONSE_TIME_THRESHOLD_MS=1000   # Response time threshold
MEMORY_USAGE_THRESHOLD=85.0       # Memory usage threshold percentage
CPU_USAGE_THRESHOLD=80.0          # CPU usage threshold percentage

# Monitoring settings
METRICS_ENABLED=true
METRICS_PORT=9090                # Prometheus metrics server port
ALERTING_ENABLED=false           # Enable alerting system

# ============================================================================
# Configuration System Settings
# ============================================================================
CONFIG_FILE_PATH=                # Optional: Path to additional config file
CONFIG_HOT_RELOAD=true           # Enable configuration hot-reload
CONFIG_VALIDATION_STRICT=true    # Enable strict validation
SECRETS_DIR=/run/secrets         # Directory for Docker secrets

# ============================================================================
# Development and Testing Settings
# ============================================================================
DEVELOPMENT_MODE=true           # Enable development features
ENABLE_PERFORMANCE_MONITORING=true
SLOW_QUERY_THRESHOLD=1000      # Log queries slower than this (ms)

# ============================================================================
# Testing Configuration (Test Environment Only)
# ============================================================================
# Uncomment these variables when running in test environment (ENVIRONMENT=test)

# Core test settings
# TEST_MODE=true
# CONFIG_TEST_MODE=true
# METRICS_TEST_MODE=true
# PERFORMANCE_TEST_MODE=true

# Test data and fixtures
# TEST_DATA_PATH=./tests/fixtures
# TEST_PROMPTS_FILE=./tests/fixtures/prompts.json

# Test database and services
# DOCKER_POSTGRES_PORT=5432
# DOCKER_REDIS_PORT=6379
# TEST_MCP_PASSWORD=test_mcp_password_for_integration_testing

# External services for integration tests
# EXTERNAL_API_BASE_URL=https://httpbin.org
# EXTERNAL_API_TIMEOUT=10

# Network settings for tests
# HTTP_TIMEOUT=30
# HTTP_RETRIES=3
# HTTP_BACKOFF_FACTOR=1.0
# TCP_KEEPALIVE=true

# Load testing configuration
# LOAD_TEST_USERS=10
# LOAD_TEST_DURATION=30
# LOAD_TEST_RPS=50

# Integration test execution
# INTEGRATION_TEST_TIMEOUT=300
# INTEGRATION_TEST_PARALLEL=false
# INTEGRATION_TEST_CLEANUP=true
# INTEGRATION_TEST_VERBOSE=true

# Feature flags for testing
# FEATURE_FLAG_NEW_AUTH=true
# FEATURE_FLAG_ENHANCED_METRICS=true
# FEATURE_FLAG_ML_OPTIMIZATION=true

# Security testing
# OWASP_VALIDATION_ENABLED=true
# INPUT_SANITIZATION_STRICT=true
# OUTPUT_VALIDATION_ENABLED=true
# RATE_LIMIT_BYPASS_HEADER=X-Test-Bypass-Rate-Limit

# Test logging configuration
# LOG_FORMAT=json
# LOG_FILE_PATH=./logs/test.log
# LOG_MAX_SIZE=10MB
# LOG_BACKUP_COUNT=3

# Test cache configuration
# CACHE_DEFAULT_TTL=300
# CACHE_MAX_SIZE=1000
# CACHE_EVICTION_POLICY=lru

# ============================================================================
# Environment-Specific Quick Setup
# ============================================================================
# Copy the appropriate section below to quickly configure for your environment

# FOR TEST ENVIRONMENT - Uncomment these lines:
# ENVIRONMENT=test
# DEBUG=true
# API_PORT=8001
# DB_POOL_MIN_SIZE=2
# DB_POOL_MAX_SIZE=8
# DB_POOL_TIMEOUT=5
# REDIS_MAX_CONNECTIONS=10
# ML_MODEL_CACHE_SIZE=2
# ML_MODEL_WARMUP_ENABLED=false
# HEALTH_CHECK_INTERVAL=10
# CONFIG_HOT_RELOAD=false

# FOR PRODUCTION ENVIRONMENT - Uncomment these lines:
# ENVIRONMENT=production
# DEBUG=false
# LOG_LEVEL=WARNING
# DB_POOL_MIN_SIZE=8
# DB_POOL_MAX_SIZE=32
# DB_POOL_TIMEOUT=5
# API_WORKERS=4
# API_ENABLE_HTTPS=true
# API_SSL_CERT_PATH=/etc/ssl/certs/app.crt
# API_SSL_KEY_PATH=/etc/ssl/private/app.key
# REDIS_SENTINEL_ENABLED=true
# METRICS_ENABLED=true
# ALERTING_ENABLED=true
# CONFIG_HOT_RELOAD=false

# ============================================================================
# Phase 1: External Service Endpoints Configuration
# ============================================================================
# Essential Database Container Isolation requires external service endpoints
# Configure these when running PostgreSQL container only

# External PostgreSQL Configuration (if not using container)
EXTERNAL_POSTGRES_HOST=your-external-postgres-host
EXTERNAL_POSTGRES_PORT=5432
EXTERNAL_POSTGRES_DATABASE=your-external-database
EXTERNAL_POSTGRES_USERNAME=your-external-user
EXTERNAL_POSTGRES_PASSWORD=your-external-password

# External Redis Configuration (required for production)
EXTERNAL_REDIS_HOST=your-external-redis-host
EXTERNAL_REDIS_PORT=6379
EXTERNAL_REDIS_DB=0
EXTERNAL_REDIS_PASSWORD=your-external-redis-password

# External Monitoring Endpoints
EXTERNAL_PROMETHEUS_HOST=your-prometheus-host
EXTERNAL_PROMETHEUS_PORT=9090
EXTERNAL_GRAFANA_HOST=your-grafana-host  
EXTERNAL_GRAFANA_PORT=3000

# External Health Check Endpoints
HEALTH_CHECK_ENDPOINTS=http://api:8000/health,http://redis:6379/ping
EXTERNAL_HEALTH_TIMEOUT=30
EXTERNAL_SERVICE_RETRY_COUNT=3
EXTERNAL_SERVICE_RETRY_DELAY=5

# External Load Balancer Configuration
LOAD_BALANCER_HOST=your-load-balancer
LOAD_BALANCER_PORT=80
LOAD_BALANCER_PROTOCOL=http

# External Message Queue (if applicable)
EXTERNAL_RABBITMQ_HOST=your-rabbitmq-host
EXTERNAL_RABBITMQ_PORT=5672
EXTERNAL_RABBITMQ_USERNAME=your-rabbitmq-user
EXTERNAL_RABBITMQ_PASSWORD=your-rabbitmq-password

# External Search Engine (if applicable)
EXTERNAL_ELASTICSEARCH_HOST=your-elasticsearch-host
EXTERNAL_ELASTICSEARCH_PORT=9200
EXTERNAL_ELASTICSEARCH_USERNAME=your-es-user
EXTERNAL_ELASTICSEARCH_PASSWORD=your-es-password
