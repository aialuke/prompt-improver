[pytest]
# 2025 Best Practice: Configure pytest-asyncio properly
asyncio_mode = auto
# Prefer function-scoped loops for isolation in async tests
asyncio_default_fixture_loop_scope = function

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test Category Markers
markers =
    # Core test categories
    unit: pure unit tests with complete mocking (<100ms)
    integration: service boundary tests with test containers (<1s)
    contract: API and protocol contract validation tests
    e2e: end-to-end workflow tests with full system (<10s)
    
    # Specialized markers
    asyncio: mark test as async
    performance: performance requirement and load tests
    slow: tests that take longer than normal thresholds
    
    # API contract markers
    api: REST API contract tests
    mcp: MCP protocol contract tests
    schema: schema validation tests
    
    # E2E workflow markers
    workflow: complete user workflow tests
    scenario: specific user scenario tests
    ui: user interface tests
    load: load testing scenarios

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage and test execution
addopts =
    --strict-markers
    --strict-config
    --verbose
    -ra
    --tb=short

# Test timeouts by category (requires pytest-timeout)
# timeout = 300
# Unit tests: 5 seconds max (individual tests <100ms)
# Integration tests: 30 seconds max (individual tests <1s) 
# Contract tests: 60 seconds max
# E2E tests: 300 seconds max (individual tests <10s)

# Test category execution patterns
# Run unit tests: pytest tests/unit/ -m unit
# Run integration tests: pytest tests/integration/ -m integration  
# Run contract tests: pytest tests/contract/ -m contract
# Run E2E tests: pytest tests/e2e/ -m e2e
# Run by performance: pytest -m performance
# Run fast tests only: pytest -m "not slow"

# Environment defaults for tests (requires pytest-env if enabled)
# env =
#   OTEL_SDK_DISABLED=true
#   OTEL_TRACES_EXPORTER=none
#   OTEL_METRICS_EXPORTER=none

# Parallel execution
# addopts = -n auto  # Uncomment for parallel execution with pytest-xdist
