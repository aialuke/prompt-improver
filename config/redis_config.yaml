# Redis Configuration for APES Pattern Cache
# Dedicated cache database configuration with optimized eviction policy

# ===================================
# Connection Configuration
# ===================================
connection:
  host: localhost
  port: 6379
  
  # Dedicated cache database (DB 2 for pattern cache)
  cache_db: 2
  default_db: 0
  
  # Connection pooling
  pool_size: 10
  max_connections: 50
  
  # Connection timeouts
  connect_timeout: 5  # seconds
  socket_timeout: 5   # seconds
  
  # SSL/TLS configuration (optional)
  ssl:
    enabled: false
    cert_path: null
    key_path: null
    ca_path: null

# ===================================
# Cache Configuration
# ===================================
cache:
  # Pattern cache specific settings
  pattern_cache:
    database: 2
    key_prefix: "pattern_cache:"
    default_ttl: 3600  # 1 hour
    max_ttl: 86400     # 24 hours
    
    # Eviction policy: allkeys-lru (evict least recently used keys)
    eviction_policy: "allkeys-lru"
    
    # Memory allocation for cache DB
    max_memory: "256mb"
    
    # Cache warming settings
    warming:
      enabled: true
      batch_size: 100
      parallel_workers: 4
  
  # Rule metadata cache
  rule_metadata:
    database: 2
    key_prefix: "rule_meta:"
    default_ttl: 7200  # 2 hours
    
  # Session cache
  session_cache:
    database: 2
    key_prefix: "session:"
    default_ttl: 1800  # 30 minutes

# ===================================
# Performance Optimization
# ===================================
performance:
  # Memory optimization
  memory:
    # LRU eviction policy for cache database
    eviction_policy: "allkeys-lru"
    max_memory_policy: "allkeys-lru"
    
    # Memory thresholds
    memory_warning_threshold: 0.8   # 80%
    memory_critical_threshold: 0.9  # 90%
    
    # Compression settings
    compression:
      enabled: true
      algorithm: "lz4"
      min_size: 1024  # Only compress values > 1KB
  
  # Pipeline optimization
  pipeline:
    enabled: true
    batch_size: 100
    max_pipeline_size: 1000
  
  # Connection optimization
  connection:
    keepalive: true
    keepalive_interval: 30  # seconds
    tcp_nodelay: true

# ===================================
# Monitoring and Metrics
# ===================================
monitoring:
  # Prometheus metrics
  metrics:
    enabled: true
    port: 9121
    path: "/metrics"
    
    # Custom metrics
    custom_metrics:
      - name: "cache_hit_ratio"
        type: "histogram"
        description: "Cache hit ratio by operation type"
        
      - name: "cache_memory_usage"
        type: "gauge"
        description: "Memory usage by cache database"
        
      - name: "cache_eviction_count"
        type: "counter"
        description: "Number of cache evictions"
  
  # Health checks
  health_checks:
    enabled: true
    interval: 30  # seconds
    timeout: 5    # seconds
    
    # Health check endpoints
    endpoints:
      - name: "cache_connectivity"
        type: "ping"
        
      - name: "cache_memory"
        type: "memory_usage"
        threshold: 0.85
        
      - name: "cache_response_time"
        type: "latency"
        threshold: 100  # milliseconds

# ===================================
# Health Monitor
# ===================================
health_monitor:
  enabled: true
  check_interval: 60  # seconds
  failure_threshold: 3
  latency_threshold: 100  # milliseconds
  reconnection:
    max_retries: 5
    backoff_factor: 2
  schedule: "*/5 * * * *"  # Every 5 minutes

# ===================================
# Security Configuration
# ===================================
security:
  # Authentication
  auth:
    enabled: false
    password: null
    username: null
  
  # Access control
  access_control:
    allowed_commands:
      - "GET"
      - "SET"
      - "DEL"
      - "EXISTS"
      - "EXPIRE"
      - "TTL"
      - "FLUSHDB"
      - "INFO"
      - "PING"
    
    # Disable dangerous commands
    disabled_commands:
      - "FLUSHALL"
      - "CONFIG"
      - "EVAL"
      - "SCRIPT"
      - "SHUTDOWN"

# ===================================
# Feature Flags
# ===================================
feature_flags:
  # Pattern cache feature flag
  pattern_cache:
    enabled: true
    rollout_percentage: 0  # Start with 0% for canary testing
    
    # A/B testing configuration
    ab_testing:
      enabled: true
      control_group_percentage: 50
      treatment_group_percentage: 50
      
      # Canary rollout configuration
      canary:
        enabled: true
        initial_percentage: 5   # Start with 5%
        increment_percentage: 10 # Increase by 10% each step
        max_percentage: 100
        
        # Success criteria for progression
        success_criteria:
          max_error_rate: 0.01    # <1% error delta
          min_performance_improvement: 0.1  # 10% improvement
          min_sample_size: 1000   # Minimum requests for significance
        
        # Rollback criteria
        rollback_criteria:
          max_error_rate: 0.05    # >5% error rate triggers rollback
          max_latency_increase: 0.2 # >20% latency increase triggers rollback
          
  # Rule caching
  rule_caching:
    enabled: true
    rollout_percentage: 100
    
  # Session caching
  session_caching:
    enabled: true
    rollout_percentage: 100

# ===================================
# Backup and Recovery
# ===================================
backup:
  enabled: true
  
  # Redis persistence
  persistence:
    # RDB snapshots
    rdb:
      enabled: true
      save_points:
        - "900 1"    # Save if at least 1 key changed in 900 seconds
        - "300 10"   # Save if at least 10 keys changed in 300 seconds
        - "60 10000" # Save if at least 10000 keys changed in 60 seconds
      
      # Compression
      compression: true
      checksum: true
    
    # AOF (Append Only File)
    aof:
      enabled: false  # Disabled for cache use case
      fsync: "everysec"
      auto_rewrite: true
      
  # Backup schedule
  schedule:
    enabled: true
    cron: "0 2 * * *"  # Daily at 2 AM
    retention_days: 7
    
  # Disaster recovery
  disaster_recovery:
    enabled: true
    backup_locations:
      - "/var/backups/redis"
      - "s3://apes-backups/redis"  # Optional S3 backup

# ===================================
# Development and Testing
# ===================================
development:
  # Development mode settings
  debug:
    enabled: false
    log_level: "INFO"
    slow_query_threshold: 100  # milliseconds
    
  # Testing configuration
  testing:
    flush_on_startup: false
    populate_test_data: false
    test_data_size: 100
    
  # Local development
  local:
    enable_save: false  # Disable persistence in development
    enable_aof: false
    max_memory: "64mb"

# ===================================
# Integration Configuration
# ===================================
integrations:
  # Prometheus integration
  prometheus:
    enabled: true
    namespace: "apes"
    labels:
      service: "redis-cache"
      environment: "production"
      
  # Grafana dashboards
  grafana:
    enabled: true
    dashboard_url: "http://localhost:3000"
    
  # Alerting
  alerting:
    enabled: true
    alert_manager_url: "http://localhost:9093"
    
    # Alert rules
    rules:
      - name: "high_memory_usage"
        condition: "memory_usage > 0.9"
        severity: "critical"
        
      - name: "low_hit_ratio"
        condition: "hit_ratio < 0.7"
        severity: "warning"
        
      - name: "high_eviction_rate"
        condition: "eviction_rate > 100"
        severity: "warning"
