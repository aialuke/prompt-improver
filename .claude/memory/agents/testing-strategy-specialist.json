{
  "agent_name": "testing-strategy-specialist",
  "last_updated": "2025-01-15T00:00:00Z",
  "task_history": [],
  "domain_knowledge": {
    "common_patterns": [
      {
        "pattern_name": "real_behavior_testing",
        "description": "Real behavior testing with testcontainers and actual services",
        "frequency": 1,
        "success_rate": 0.875
      },
      {
        "pattern_name": "contract_testing",
        "description": "API contract testing and MCP protocol validation",
        "frequency": 1,
        "success_rate": 0.90
      },
      {
        "pattern_name": "pragmatic_testing_validation",
        "description": "Validate testing problems exist with real incident data before building test infrastructure",
        "frequency": 1,
        "success_rate": 0.88
      },
      {
        "pattern_name": "test_data_first_design",
        "description": "Proper test data structure design eliminates complex test setup and assertion logic",
        "frequency": 1,
        "success_rate": 0.85
      }
    ],
    "project_specific_context": {
      "architecture_patterns": [
        "Real behavior testing with 87.5% validation success",
        "Comprehensive testcontainer infrastructure",
        "Zero-mock policy for integration testing - Theory loses to practice",
        "Property-based testing for ML algorithms",
        "Pragmatic test validation - Test problems validated with real incident data",
        "Test simplicity standards - Maximum 3 levels of test logic nesting",
        "Data-first test design - Test data structures drive test architecture"
      ],
      "performance_baselines": {
        "test_execution_time_seconds": 120,
        "test_success_rate": 0.875,
        "coverage_percentage": 85
      },
      "configuration_insights": [
        "Multi-service testing scenarios with proper isolation",
        "Real database and cache behavior validation",
        "Comprehensive security and performance testing integration"
      ]
    }
  },
  "optimization_insights": [],
  "collaboration_patterns": {
    "frequent_collaborators": [
      {
        "agent_name": "infrastructure-specialist",
        "collaboration_frequency": 5,
        "success_rate": 0.88,
        "common_tasks": ["testcontainer setup", "test environment"]
      },
      {
        "agent_name": "database-specialist",
        "collaboration_frequency": 3,
        "success_rate": 0.92,
        "common_tasks": ["database testing", "data integrity"]
      }
    ],
    "delegation_effectiveness": {}
  }
}