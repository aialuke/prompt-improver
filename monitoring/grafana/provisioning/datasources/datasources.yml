# Grafana Data Sources Configuration for APES Monitoring Stack
# Optimized for LGTM stack integration with PostgreSQL JSONB support
# Version: 11.4.0 (2025)

apiVersion: 1

datasources:
  # Mimir - Metrics Storage
  - name: Mimir
    type: prometheus
    access: proxy
    url: http://mimir:9009/prometheus
    isDefault: true
    editable: true
    jsonData:
      httpMethod: POST
      prometheusType: Mimir
      prometheusVersion: 2.40.0
      cacheLevel: 'High'
      incrementalQuerying: true
      incrementalQueryOverlapWindow: 10m
      queryTimeout: 60s
      defaultEditor: code
      disableMetricsLookup: false
      customQueryParameters: ''
      exemplarTraceIdDestinations:
        - name: trace_id
          datasourceUid: tempo
          urlDisplayLabel: 'View Trace'

  # Loki - Log Aggregation
  - name: Loki
    type: loki
    access: proxy
    url: http://loki:3100
    editable: true
    jsonData:
      maxLines: 1000
      derivedFields:
        - name: TraceID
          label: trace_id
          url: '$${__value.raw}'
          datasourceUid: tempo
          matcherRegex: '(?:trace_id|traceID)=(\w+)'
          urlDisplayLabel: 'View Trace'
        - name: SpanID
          label: span_id
          url: '$${__value.raw}'
          datasourceUid: tempo
          matcherRegex: '(?:span_id|spanID)=(\w+)'
          urlDisplayLabel: 'View Span'

  # Tempo - Distributed Tracing
  - name: Tempo
    type: tempo
    access: proxy
    url: http://tempo:3200
    editable: true
    jsonData:
      httpMethod: GET
      tracesToLogs:
        datasourceUid: loki
        tags: ['job', 'instance', 'pod', 'namespace']
        mappedTags: [{ key: 'service.name', value: 'service' }]
        mapTagNamesEnabled: false
        spanStartTimeShift: '1h'
        spanEndTimeShift: '-1h'
        filterByTraceID: false
        filterBySpanID: false
        lokiSearch: true
      tracesToMetrics:
        datasourceUid: mimir
        tags: [{ key: 'service.name', value: 'service' }, { key: 'job' }]
        queries:
          - name: 'Sample query'
            query: 'sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[5m]))'
      serviceMap:
        datasourceUid: mimir
      nodeGraph:
        enabled: true
      search:
        hide: false
      lokiSearch:
        datasourceUid: loki

  # PostgreSQL - JSONB Telemetry Storage
  - name: PostgreSQL
    type: postgres
    access: proxy
    url: postgres:5432
    database: apes_production
    user: apes_user
    editable: true
    jsonData:
      sslmode: disable
      maxOpenConns: 100
      maxIdleConns: 100
      maxIdleConnsAuto: true
      connMaxLifetime: 14400
      postgresVersion: 1500
      timescaledb: false
    secureJsonData:
      password: ${POSTGRES_PASSWORD}

  # TestData - For development and testing
  - name: TestData
    type: testdata
    access: proxy
    editable: true
    jsonData:
      scenarioId: 'csv_metric_values'

  # JSON API - For JSONB-compatible data access
  - name: JSON API
    type: marcusolsson-json-datasource
    access: proxy
    url: http://alloy:8080
    editable: true
    jsonData:
      cacheDurationSeconds: 300
      timeout: 30
      tlsSkipVerify: true
    httpHeaderName1: 'Content-Type'
    httpHeaderValue1: 'application/json'
    httpHeaderName2: 'X-JSONB-Compatible'
    httpHeaderValue2: 'true'
