"""Protocol Interfaces Package

This package contains Protocol interfaces that define contracts for various
system components. Using protocols eliminates circular imports by providing
interface definitions without implementation dependencies.

2025 Best Practice: Use typing.Protocol for dependency inversion.
"""
from prompt_improver.core.protocols.cache_protocol import AdvancedCacheProtocol, BasicCacheProtocol, CacheHealthProtocol, CacheLockProtocol, CacheSubscriptionProtocol, MultiLevelCacheProtocol, RedisCacheProtocol
from prompt_improver.core.protocols.connection_protocol import ConnectionManagerProtocol, ConnectionMode
from prompt_improver.core.protocols.database_protocol import DatabaseConfigProtocol, DatabaseHealthProtocol, DatabaseProtocol, DatabaseSessionProtocol, QueryOptimizerProtocol
from prompt_improver.core.protocols.datetime_protocol import DateTimeServiceProtocol, DateTimeUtilsProtocol, TimeZoneServiceProtocol
from prompt_improver.core.protocols.health_protocol import HealthCheckResult as SimpleHealthCheckResult, HealthMonitorProtocol, HealthStatus as SimpleHealthStatus
from prompt_improver.core.protocols.ml_protocol import AutoMLProtocol, DataPipelineProtocol, ExperimentTrackingProtocol, FeatureStoreProtocol, MLMonitoringProtocol, MLPlatformProtocol, ModelProtocol, ModelRegistryProtocol, ModelServingProtocol, ModelTrainingProtocol
from prompt_improver.core.protocols.monitoring_protocol import AdvancedHealthCheckProtocol, AlertingProtocol, BasicHealthCheckProtocol, CircuitBreakerProtocol as MonitoringCircuitBreakerProtocol, HealthCheckResult, HealthServiceProtocol, HealthStatus, MetricsCollectorProtocol, PerformanceMonitorProtocol, SLAMonitorProtocol
from prompt_improver.core.protocols.retry_protocols import AnyMetricsRegistry, AnyRetryConfig, BackgroundTaskProtocol, CircuitBreakerProtocol, MetricsRegistryProtocol, RetryableErrorType, RetryableOperation, RetryCallback, RetryConfigFactoryProtocol, RetryConfigProtocol, RetryDecoratorProtocol, RetryManagerProtocol, RetryManagerProtocol as SimpleRetryManagerProtocol, RetryObserverProtocol, RetryPredicate, RetryStrategy, RetryStrategy as SimpleRetryStrategy
__all__ = ['RetryStrategy', 'RetryableErrorType', 'RetryConfigProtocol', 'RetryManagerProtocol', 'MetricsRegistryProtocol', 'BackgroundTaskProtocol', 'CircuitBreakerProtocol', 'RetryDecoratorProtocol', 'RetryConfigFactoryProtocol', 'RetryObserverProtocol', 'RetryableOperation', 'RetryCallback', 'RetryPredicate', 'AnyRetryConfig', 'AnyMetricsRegistry', 'DateTimeServiceProtocol', 'TimeZoneServiceProtocol', 'DateTimeUtilsProtocol', 'DatabaseSessionProtocol', 'DatabaseConfigProtocol', 'QueryOptimizerProtocol', 'DatabaseHealthProtocol', 'DatabaseProtocol', 'BasicCacheProtocol', 'AdvancedCacheProtocol', 'CacheHealthProtocol', 'CacheSubscriptionProtocol', 'CacheLockProtocol', 'RedisCacheProtocol', 'MultiLevelCacheProtocol', 'HealthStatus', 'HealthCheckResult', 'BasicHealthCheckProtocol', 'AdvancedHealthCheckProtocol', 'PerformanceMonitorProtocol', 'MonitoringCircuitBreakerProtocol', 'AlertingProtocol', 'SLAMonitorProtocol', 'MetricsCollectorProtocol', 'HealthServiceProtocol', 'ModelProtocol', 'ModelRegistryProtocol', 'ExperimentTrackingProtocol', 'FeatureStoreProtocol', 'DataPipelineProtocol', 'ModelTrainingProtocol', 'ModelServingProtocol', 'AutoMLProtocol', 'MLMonitoringProtocol', 'MLPlatformProtocol', 'ConnectionMode', 'ConnectionManagerProtocol', 'SimpleRetryStrategy', 'SimpleRetryManagerProtocol', 'SimpleHealthStatus', 'SimpleHealthCheckResult', 'HealthMonitorProtocol']
