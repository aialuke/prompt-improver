# ============================================================================
# Comprehensive Configuration Example for Prompt Improver
# ============================================================================
# Copy this file to .env and customize values for your environment
# SECURITY WARNING: Never commit actual passwords or secrets to version control

# ============================================================================
# Environment Settings
# ============================================================================
ENVIRONMENT=development  # Options: development, staging, production, test
DEBUG=true
LOG_LEVEL=INFO  # Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
APP_NAME=prompt-improver
APP_VERSION=1.0.0
SECRET_KEY=your-super-secret-key-change-this-in-production-must-be-32-chars-min

# ============================================================================
# Database Configuration (PostgreSQL)
# ============================================================================
# Connection settings
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DATABASE=apes_production
POSTGRES_USERNAME=apes_user
POSTGRES_PASSWORD=your_secure_database_password_here

# Connection pool settings (2025 best practices)
DB_POOL_MIN_SIZE=4          # Minimum connections to keep warm
DB_POOL_MAX_SIZE=16         # Maximum connections for traffic spikes
DB_POOL_TIMEOUT=10          # Connection timeout in seconds
DB_POOL_MAX_LIFETIME=1800   # Max connection age (30 minutes)
DB_POOL_MAX_IDLE=300        # Max idle time (5 minutes)

# Performance settings
DB_STATEMENT_TIMEOUT=30     # SQL statement timeout in seconds
DB_ECHO_SQL=false          # Log SQL statements (enable for debugging)
DB_TARGET_QUERY_TIME_MS=50 # Target query response time
DB_TARGET_CACHE_HIT_RATIO=0.90 # Target cache hit ratio

# ============================================================================
# Redis Configuration
# ============================================================================
# Connection settings
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=                    # Optional password
REDIS_USERNAME=                    # Optional username (Redis 6.0+)

# Connection pool settings
REDIS_MAX_CONNECTIONS=20
REDIS_CONNECT_TIMEOUT=5           # Connection timeout in seconds
REDIS_SOCKET_TIMEOUT=5            # Socket timeout in seconds

# Memory and performance settings
REDIS_MAX_MEMORY=256mb
REDIS_MAX_MEMORY_POLICY=allkeys-lru
REDIS_DEFAULT_TTL=3600            # Default TTL in seconds (1 hour)

# High availability settings (for production)
REDIS_SENTINEL_ENABLED=false
REDIS_SENTINEL_HOSTS=             # Comma-separated list: host1:26379,host2:26379
REDIS_SENTINEL_SERVICE_NAME=mymaster

# ============================================================================
# Machine Learning Configuration
# ============================================================================
# Model storage and caching
ML_MODEL_STORAGE_PATH=./models
ML_MODEL_CACHE_SIZE=5             # Number of models to cache in memory
ML_MODEL_WARMUP_ENABLED=true      # Warm up models on startup

# Inference settings
ML_INFERENCE_TIMEOUT=30           # Model inference timeout in seconds
ML_BATCH_SIZE=32                  # Default batch size for inference
ML_MAX_SEQUENCE_LENGTH=2048       # Maximum input sequence length

# Resource limits
ML_GPU_MEMORY_FRACTION=0.8        # Fraction of GPU memory to use
ML_CPU_THREADS=4                  # Number of CPU threads for inference

# MLflow experiment tracking
MLFLOW_TRACKING_URI=              # Optional: MLflow tracking server URI
MLFLOW_EXPERIMENT_NAME=prompt-improvement

# Model serving
ML_MODEL_SERVING_ENABLED=true     # Enable model serving endpoints

# ============================================================================
# API Server Configuration
# ============================================================================
# Server settings
API_HOST=0.0.0.0
API_PORT=8000
API_WORKERS=1                     # Number of worker processes

# Request/Response limits
API_MAX_REQUEST_SIZE=10485760     # 10MB in bytes
API_REQUEST_TIMEOUT=30            # Request timeout in seconds

# Rate limiting
API_RATE_LIMIT_ENABLED=true
API_RATE_LIMIT_RPM=60            # Requests per minute per client
API_RATE_LIMIT_BURST=10          # Rate limit burst capacity

# CORS settings
API_CORS_ENABLED=true
API_CORS_ORIGINS=http://localhost:3000,http://localhost:8080
API_CORS_METHODS=GET,POST,PUT,DELETE,OPTIONS

# Security settings
API_ENABLE_HTTPS=false            # Enable HTTPS (requires SSL certificates)
API_SSL_CERT_PATH=                # Path to SSL certificate file
API_SSL_KEY_PATH=                 # Path to SSL private key file

# Authentication
# JWT authentication removed - system now uses simplified input validation
JWT_EXPIRY_HOURS=24              # JWT token expiry in hours

# ============================================================================
# Health Check and Monitoring Configuration
# ============================================================================
# Health check intervals
HEALTH_CHECK_INTERVAL=30          # Health check interval in seconds
STARTUP_TIMEOUT=60               # Startup timeout in seconds
SHUTDOWN_TIMEOUT=30              # Graceful shutdown timeout in seconds

# Component health timeouts
DB_HEALTH_TIMEOUT=5              # Database health check timeout
REDIS_HEALTH_TIMEOUT=3           # Redis health check timeout
ML_HEALTH_TIMEOUT=10             # ML model health check timeout

# Performance thresholds
RESPONSE_TIME_THRESHOLD_MS=1000   # Response time threshold
MEMORY_USAGE_THRESHOLD=85.0       # Memory usage threshold percentage
CPU_USAGE_THRESHOLD=80.0          # CPU usage threshold percentage

# Monitoring settings
METRICS_ENABLED=true
METRICS_PORT=9090                # Prometheus metrics server port
ALERTING_ENABLED=false           # Enable alerting system

# ============================================================================
# Configuration System Settings
# ============================================================================
CONFIG_FILE_PATH=                # Optional: Path to additional config file
CONFIG_HOT_RELOAD=true           # Enable configuration hot-reload
CONFIG_VALIDATION_STRICT=true    # Enable strict validation
SECRETS_DIR=/run/secrets         # Directory for Docker secrets

# ============================================================================
# MCP Server Configuration (Legacy Compatibility)
# ============================================================================
# These settings maintain compatibility with existing MCP server setup
MCP_POSTGRES_ENABLED=true
MCP_POSTGRES_PASSWORD=secure_mcp_user_password
# MCP JWT authentication removed - system now uses simplified access control
MCP_RATE_LIMIT_REDIS_URL=redis://localhost:6379/2
MCP_CACHE_REDIS_URL=redis://localhost:6379/3
MCP_LOG_LEVEL=INFO
MCP_PERFORMANCE_MONITORING_ENABLED=true
MCP_FEEDBACK_ENABLED=true
MCP_MAX_PROMPT_LENGTH=10240
MCP_REQUEST_TIMEOUT_MS=200
MCP_CACHE_TTL_SECONDS=7200
MCP_DB_POOL_SIZE=20
MCP_DB_MAX_OVERFLOW=10

# ============================================================================
# Development and Testing Settings
# ============================================================================
# Test database (used during testing)
TEST_DB_NAME=apes_test
TEST_DATABASE_URL=              # Optional: Override test database URL

# Development features
DEVELOPMENT_MODE=true           # Enable development features
ENABLE_PERFORMANCE_MONITORING=true
SLOW_QUERY_THRESHOLD=1000      # Log queries slower than this (ms)

# ============================================================================
# Production Environment Overrides
# ============================================================================
# Uncomment and configure these for production deployment:

# ENVIRONMENT=production
# DEBUG=false
# LOG_LEVEL=WARNING
# 
# # Production database with connection pooling
# DB_POOL_MIN_SIZE=8
# DB_POOL_MAX_SIZE=32
# DB_POOL_TIMEOUT=5
# 
# # Production Redis with high availability
# REDIS_SENTINEL_ENABLED=true
# REDIS_SENTINEL_HOSTS=redis-sentinel-1:26379,redis-sentinel-2:26379,redis-sentinel-3:26379
# 
# # Production API with HTTPS
# API_ENABLE_HTTPS=true
# API_SSL_CERT_PATH=/etc/ssl/certs/app.crt
# API_SSL_KEY_PATH=/etc/ssl/private/app.key
# API_WORKERS=4
# 
# # Stricter rate limiting for production
# API_RATE_LIMIT_RPM=100
# API_RATE_LIMIT_BURST=5
# 
# # Production monitoring
# METRICS_ENABLED=true
# ALERTING_ENABLED=true
# 
# # Disable hot-reload in production
# CONFIG_HOT_RELOAD=false

# ============================================================================
# Cloud Integration Examples
# ============================================================================
# AWS Secrets Manager (requires AWS credentials configured)
# AWS_SECRETS_MANAGER_SECRET_ID=prod/prompt-improver/secrets

# Google Cloud Secret Manager (requires GCP credentials)
# GCP_PROJECT_ID=your-gcp-project-id

# Azure Key Vault (requires Azure credentials)
# AZURE_KEY_VAULT_URL=https://your-keyvault.vault.azure.net/

# ============================================================================
# Environment-Specific Files
# ============================================================================
# You can create environment-specific .env files:
# - .env.local (loaded in all environments, ignored by git)
# - .env.development (development environment)
# - .env.staging (staging environment) 
# - .env.production (production environment)
# - .env.test (test environment)
#
# The configuration system will automatically load the appropriate file
# based on the ENVIRONMENT setting.