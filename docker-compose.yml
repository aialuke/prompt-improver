services:
  # ===================================
  # Core Database Service
  # ===================================
  postgres:
    image: postgres:15
    container_name: apes_postgres
    environment:
      POSTGRES_DB: apes_production
      POSTGRES_USER: apes_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-please_set_secure_password}
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/02-schema.sql
      - ./monitoring/database/telemetry_schema.sql:/docker-entrypoint-initdb.d/03-telemetry.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U apes_user -d apes_production"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - apes_network

  # ===================================
  # LGTM Observability Stack (2025)
  # ===================================

  # Grafana - Visualization and Dashboards
  grafana:
    image: grafana/grafana:11.4.0
    container_name: apes_grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_FEATURE_TOGGLES_ENABLE=topnav
      - GF_INSTALL_PLUGINS=grafana-pyroscope-app
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - loki
      - mimir
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - apes_network

  # Loki - Log Aggregation
  loki:
    image: grafana/loki:3.3.1
    container_name: apes_loki
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki
      - ./monitoring/loki/loki.yml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - apes_network

  # Mimir - Metrics Storage
  mimir:
    image: grafana/mimir:2.14.1
    container_name: apes_mimir
    ports:
      - "9009:9009"
    volumes:
      - mimir_data:/data
      - ./monitoring/mimir/mimir.yml:/etc/mimir/mimir.yml
    command: -config.file=/etc/mimir/mimir.yml
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9009/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - apes_network

  # Grafana Alloy - OpenTelemetry Collector
  alloy:
    image: grafana/alloy:v1.4.2
    container_name: apes_alloy
    ports:
      - "12347:12347"  # Alloy UI
      - "4317:4317"    # OTLP gRPC
      - "4318:4318"    # OTLP HTTP
      - "9464:9464"    # Prometheus metrics
    volumes:
      - ./monitoring/alloy/config.alloy:/etc/alloy/config.alloy
      - alloy_data:/var/lib/alloy/data
    command:
      - run
      - --server.http.listen-addr=0.0.0.0:12347
      - --storage.path=/var/lib/alloy/data
      - /etc/alloy/config.alloy
    depends_on:
      - loki
      - mimir
      - postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:12347/-/healthy || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - apes_network

  # Optional: pgAdmin for database management UI
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: apes_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@apes.local
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-please_set_secure_password}
    ports:
      - "8080:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    profiles:
      - admin
    restart: unless-stopped
    networks:
      - apes_network

volumes:
  postgres_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local
  mimir_data:
    driver: local
  alloy_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  apes_network:
    driver: bridge
